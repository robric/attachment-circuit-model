//
// Pending questions: 
// - ac-templates (i.e. QoS)
// - ac-grouping
// - peer-sap-id ???
// - bare ethernet
// - Control-plane driven identifiers (e.G. BGP communities)
//

module: ietf-ac-svc
  +--rw ac-profile [id]
     +--rw id                   string
     +--rw l2-connection
     |  +--rw encapsulation
     |  |  +--rw type?              identityref
     |  |  +--rw dot1q
     |  |  |  +--rw tag-type?   identityref
     |  |  |  +--rw cvlan-id?   uint16
//
// How much do we want to keep this one in an intent model where may want to rely on more intent-base QoS logic
// We may think of a generic "QoS profile" (String), from the TN orchestration adjust all marking/Qos logic 
//
//      |  |  +--rw priority-tagged
//     |  |  |  +--rw tag-type?   identityref
//
     |  |  +--rw qinq
     |  |     +--rw tag-type?   identityref
     |  |     +--rw svlan-id    uint16
     |  |     +--rw cvlan-id    uint16
//
// In ip connection, most of the changes are related to Cloud Integration, where we have a set of computes attached to a (potentially) redundant routers
// For this, we add a pool of ip address to be used by the customer, which may be managed by the local Cloud orchestration (kubernetees/ no dhcp).  
// Additionally, to manage redundancy, we add a technology-agnostic gateway-address (e.g. vrrp ) for use when it is different than the local-address
// Points unclear: can we have several ip-connection (in case we have secondary addresses) ? 
// 
     +--rw ip-connection
     |  +--rw ipv4 {vpn-common:ipv4}?
     |  |  +--rw local-address?
     |  |  |       inet:ipv4-address
     |  |  +--rw prefix-length?                                 uint8
     |  |  +--rw virtual-address?    // change name ? and specify the role ==> explain the use case in the description 
     |  |  |       inet:ipv4-address
     |  |  +--rw address-allocation-type?
     |  |  |       identityref
     |  |  +--rw (allocation-type)?
     |  |     +--:(provider-dhcp)
     |  |     |  +--rw dhcp-service-type?
     |  |     |  |       enumeration
     |  |     |  +--rw (service-type)?
     |  |     |     +--:(relay)
     |  |     |     |  +--rw server-ip-address*
     |  |     |     |          inet:ipv4-address
     |  |     |     +--:(server)
     |  |     |        +--rw (address-assign)?
     |  |     |           +--:(number)
     |  |     |           |  +--rw number-of-dynamic-address?
     |  |     |           |          uint16
     |  |     |           +--:(explicit)
     |  |     |              +--rw customer-addresses
     |  |     |                 +--rw address-pool* [pool-id]
     |  |     |                    +--rw pool-id          string
     |  |     |                    +--rw start-address
     |  |     |                    |       inet:ipv4-address
     |  |     |                    +--rw end-address?
     |  |     |                            inet:ipv4-address
     |  |     +--:(dhcp-relay)
     |  |     |  +--rw customer-dhcp-servers
     |  |     |     +--rw server-ip-address*   inet:ipv4-address
     |  |     +--:(static-addresses)
     |  |        +--rw primary-address?
     |  |        |       -> ../address/address-id
     |  |        +--rw address* [address-id]
     |  |        |  +--rw address-id          string
     |  |        |  +--rw customer-address?   inet:ipv4-address
     |  |        +--rw address-pool* [pool-id]                    // choice structure du pool - utilisation de choix ou possibilit√© d'utiliser static-address et address-pool en meme temps (non overlapping ?)
     |  |           +--rw pool-id          string
     |  |           +--rw start-address
     |  |           |       inet:ipv4-address
     |  |           +--rw end-address?      
     |  |                                       inet:ipv4-address

//
// How much do we want to keep this one in an intent model where may want to rely on more intent-base QoS logic
// We may think of a generic "QoS profile" (String), from the TN orchestration adjust all marking/Qos logic 
//

     |  +--rw ipv6 {vpn-common:ipv6}?
//
// Use the same logic for ipv6 as ipv4
//
     +--rw routing-protocols
     |  +--rw routing-protocol* [id]
     |     +--rw id        string
     |     +--rw type?     identityref
     |     +--rw static
//
// adding a few statements for static routes:
//    - preference/metric for backup strategies 
//    - bfd-enable 
//
     |     |  +--rw cascaded-lan-prefixes
     |     |     +--rw ipv4-lan-prefixes* [lan next-hop]
     |     |     |       {vpn-common:ipv4}?
     |     |     |  +--rw lan         inet:ipv4-prefix
     |     |     |  +--rw lan-tag?    string
     |     |     |  +--rw next-hop    union
     |     |     |  +--rw bfd-enable?   boolean
     |     |     |  +--rw preference       uint32
///
     |     |     |  +--rw status
     |     |     |     +--rw admin-status
     |     |     |     |  +--rw status?        identityref
     |     |     |     |  +--rw last-change?   yang:date-and-time
     |     |     |     +--ro oper-status
     |     |     |        +--ro status?        identityref
     |     |     |        +--ro last-change?   yang:date-and-time
//
// same expansion to be applied to ipv6
//
     |     |     +--rw ipv6-lan-prefixes* [lan next-hop]
     |     |             {vpn-common:ipv6}?
     |     |        +--rw lan         inet:ipv6-prefix
     |     |        +--rw lan-tag?    string
     |     |        +--rw next-hop    union
     |     |        +--rw status
     |     |           +--rw admin-status
     |     |           |  +--rw status?        identityref
     |     |           |  +--rw last-change?   yang:date-and-time
     |     |           +--ro oper-status
     |     |              +--ro status?        identityref
     |     |              +--ro last-change?   yang:date-and-time
//
// For BGP, we consider a trade-off between customer and network model with the following augmentations:
// - local-as (sp) and peer-as (customer)
// - Hierarchy of group/neighbors, to apply different logic on peers based on groups (ie)
// We rely on a template which to  be mapped to configuration within the Network Controller (ka timers, as-path tweaking, bfd etc...).  Note that we can also rely on a more global ac profile too.
// We also provide a placeholder to be populated with adequate parameters. The logic of the policy is 
// Do we want authentication here ?
//
     |     +--rw bgp
     |     |  +--rw peer-group*                  string   //// Use profile instead ????
     |     |     +--rw local-as?                  inet:as-number
     |     |     +--rw peer-as           inet:as-number
     |     |     +--rw address-family?   identityref
     |     |     +--rw neighbor*                  inet:ip-address
     |     |     +--rw peer-group-template?      string
     |     |        + opaque-policy-parameters ?* string
     |     |  +--rw status
     |     |     +--rw admin-status
     |     |     |  +--rw status?        identityref
     |     |     |  +--rw last-change?   yang:date-and-time
     |     |     +--ro oper-status
     |     |        +--ro status?        identityref
     |     |        +--ro last-change?   yang:date-and-time
// ospf:
// authentication ?
     |     +--rw ospf
     |     |  +--rw address-family?   identityref
     |     |  +--rw area-id           yang:dotted-quad
     |     |  +--rw metric?           uint16
     |     |  +--rw sham-links {vpn-common:rtg-ospf-sham-link}?
     |     |  |  +--rw sham-link* [target-site]
     |     |  |     +--rw target-site    string
     |     |  |     +--rw metric?        uint16
     |     |  +--rw status
     |     |     +--rw admin-status
     |     |     |  +--rw status?        identityref
     |     |     |  +--rw last-change?   yang:date-and-time
     |     |     +--ro oper-status
     |     |        +--ro status?        identityref
     |     |        +--ro last-change?   yang:date-and-time
// isis:
// adjacency type ? 
// authentication ?
//
     |     +--rw isis
     |     |  +--rw address-family?   identityref
     |     |  +--rw area-address      l3nm:area-address
     |     |  +--rw status
     |     |     +--rw admin-status
     |     |     |  +--rw status?        identityref
     |     |     |  +--rw last-change?   yang:date-and-time
     |     |     +--ro oper-status
     |     |        +--ro status?        identityref
     |     |        +--ro last-change?   yang:date-and-time
     |     +--rw rip
     |     |  +--rw address-family?   identityref
     |     |  +--rw status
     |     |     +--rw admin-status
     |     |     |  +--rw status?        identityref
     |     |     |  +--rw last-change?   yang:date-and-time
     |     |     +--ro oper-status
     |     |        +--ro status?        identityref
     |     |        +--ro last-change?   yang:date-and-time

     +--rw security
        +--rw encryption {vpn-common:encryption}?
        |  +--rw enabled?   boolean
        |  +--rw layer?     enumeration
        +--rw encryption-profile
           +--rw (profile)?
              +--:(customer-profile)
                 +--rw customer-key-chain?   key-chain:key-chain-ref
